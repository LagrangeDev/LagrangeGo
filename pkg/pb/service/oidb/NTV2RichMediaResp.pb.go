// Code generated by protoc-gen-golite. DO NOT EDIT.
// source: pb/service/oidb/NTV2RichMediaResp.proto

package oidb

import (
	proto "github.com/RomiChan/protobuf/proto"
)

type NTV2RichMediaResp struct {
	RespHead         *MultiMediaRespHead   `protobuf:"bytes,1,opt"`
	Upload           *UploadResp           `protobuf:"bytes,2,opt"`
	Download         *DownloadResp         `protobuf:"bytes,3,opt"`
	DownloadRKey     *DownloadRKeyResp     `protobuf:"bytes,4,opt"`
	Delete           *DeleteResp           `protobuf:"bytes,5,opt"`
	UploadCompleted  *UploadCompletedResp  `protobuf:"bytes,6,opt"`
	MsgInfoAuth      *MsgInfoAuthResp      `protobuf:"bytes,7,opt"`
	UploadKeyRenewal *UploadKeyRenewalResp `protobuf:"bytes,8,opt"`
	DownloadSafe     *DownloadSafeResp     `protobuf:"bytes,9,opt"`
	Extension        []byte                `protobuf:"bytes,99,opt"`
}

type MultiMediaRespHead struct {
	Common  *CommonHead `protobuf:"bytes,1,opt"`
	RetCode uint32      `protobuf:"varint,2,opt"`
	Message string      `protobuf:"bytes,3,opt"`
	_       [0]func()
}

type DownloadResp struct {
	RKeyParam      string        `protobuf:"bytes,1,opt"`
	RKeyTtlSecond  uint32        `protobuf:"varint,2,opt"`
	Info           *DownloadInfo `protobuf:"bytes,3,opt"`
	RKeyCreateTime uint32        `protobuf:"varint,4,opt"`
	_              [0]func()
}

type DownloadInfo struct {
	Domain        string         `protobuf:"bytes,1,opt"`
	UrlPath       string         `protobuf:"bytes,2,opt"`
	HttpsPort     uint32         `protobuf:"varint,3,opt"`
	IPv4S         []*IPv4        `protobuf:"bytes,4,rep"`
	IPv6S         []*IPv6        `protobuf:"bytes,5,rep"`
	PicUrlExtInfo *PicUrlExtInfo `protobuf:"bytes,6,opt"`
	VideoExtInfo  *VideoExtInfo  `protobuf:"bytes,7,opt"`
}

type IPv4 struct {
	OutIP   uint32 `protobuf:"varint,1,opt"`
	OutPort uint32 `protobuf:"varint,2,opt"`
	InIP    uint32 `protobuf:"varint,3,opt"`
	InPort  uint32 `protobuf:"varint,4,opt"`
	IPType  uint32 `protobuf:"varint,5,opt"`
	_       [0]func()
}

type IPv6 struct {
	OutIP   []byte `protobuf:"bytes,1,opt"`
	OutPort uint32 `protobuf:"varint,2,opt"`
	InIP    []byte `protobuf:"bytes,3,opt"`
	InPort  uint32 `protobuf:"varint,4,opt"`
	IPType  uint32 `protobuf:"varint,5,opt"`
}

type UploadResp struct {
	UKey          proto.Option[string]         `protobuf:"bytes,1,opt"`
	UKeyTtlSecond uint32                       `protobuf:"varint,2,opt"`
	IPv4S         []*IPv4                      `protobuf:"bytes,3,rep"`
	IPv6S         []*IPv6                      `protobuf:"bytes,4,rep"`
	MsgSeq        uint64                       `protobuf:"varint,5,opt"`
	MsgInfo       *MsgInfo                     `protobuf:"bytes,6,opt"`
	Ext           []*RichMediaStorageTransInfo `protobuf:"bytes,7,rep"`
	CompatQMsg    []byte                       `protobuf:"bytes,8,opt"`
	SubFileInfos  []*SubFileInfo               `protobuf:"bytes,10,rep"`
}

type RichMediaStorageTransInfo struct {
	SubType  uint32 `protobuf:"varint,1,opt"`
	ExtType  uint32 `protobuf:"varint,2,opt"`
	ExtValue []byte `protobuf:"bytes,3,opt"`
}

type SubFileInfo struct {
	SubType       uint32  `protobuf:"varint,1,opt"`
	UKey          string  `protobuf:"bytes,2,opt"`
	UKeyTtlSecond uint32  `protobuf:"varint,3,opt"`
	IPv4S         []*IPv4 `protobuf:"bytes,4,rep"`
	IPv6S         []*IPv6 `protobuf:"bytes,5,rep"`
}

type DownloadSafeResp struct {
	_ [0]func()
}

type UploadKeyRenewalResp struct {
	Ukey       string `protobuf:"bytes,1,opt"`
	UkeyTtlSec uint64 `protobuf:"varint,2,opt"`
	_          [0]func()
}

type MsgInfoAuthResp struct {
	AuthCode   uint32 `protobuf:"varint,1,opt"`
	Msg        []byte `protobuf:"bytes,2,opt"`
	ResultTime uint64 `protobuf:"varint,3,opt"`
}

type UploadCompletedResp struct {
	MsgSeq uint64 `protobuf:"varint,1,opt"`
	_      [0]func()
}

type DeleteResp struct {
	_ [0]func()
}

type DownloadRKeyResp struct {
	RKeys []*RKeyInfo `protobuf:"bytes,1,rep"`
}

type RKeyInfo struct {
	Rkey           string               `protobuf:"bytes,1,opt"`
	RkeyTtlSec     uint64               `protobuf:"varint,2,opt"`
	StoreId        uint32               `protobuf:"varint,3,opt"`
	RkeyCreateTime proto.Option[uint32] `protobuf:"varint,4,opt"`
	Type           proto.Option[uint32] `protobuf:"varint,5,opt"`
	_              [0]func()
}
