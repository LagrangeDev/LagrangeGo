// Code generated by protoc-gen-golite. DO NOT EDIT.
// source: pb/service/highway/highway.proto

package highway

import (
	proto "github.com/RomiChan/protobuf/proto"

	oidb "github.com/LagrangeDev/LagrangeGo/client/packets/pb/service/oidb"
)

type DataHighwayHead struct {
	Version    uint32               `protobuf:"varint,1,opt"`
	Uin        proto.Option[string] `protobuf:"bytes,2,opt"`
	Command    proto.Option[string] `protobuf:"bytes,3,opt"`
	Seq        proto.Option[uint32] `protobuf:"varint,4,opt"`
	RetryTimes proto.Option[uint32] `protobuf:"varint,5,opt"`
	AppId      uint32               `protobuf:"varint,6,opt"`
	DataFlag   uint32               `protobuf:"varint,7,opt"`
	CommandId  uint32               `protobuf:"varint,8,opt"`
	BuildVer   []byte               `protobuf:"bytes,9,opt"`
}

type FileUploadExt struct {
	Unknown1   int32            `protobuf:"varint,1,opt"`
	Unknown2   int32            `protobuf:"varint,2,opt"`
	Unknown3   int32            `protobuf:"varint,3,opt"`
	Entry      *FileUploadEntry `protobuf:"bytes,100,opt"`
	Unknown200 int32            `protobuf:"varint,200,opt"`
	_          [0]func()
}

type FileUploadEntry struct {
	BusiBuff     *ExcitingBusiInfo     `protobuf:"bytes,100,opt"`
	FileEntry    *ExcitingFileEntry    `protobuf:"bytes,200,opt"`
	ClientInfo   *ExcitingClientInfo   `protobuf:"bytes,300,opt"`
	FileNameInfo *ExcitingFileNameInfo `protobuf:"bytes,400,opt"`
	Host         *ExcitingHostConfig   `protobuf:"bytes,500,opt"`
	_            [0]func()
}

type ExcitingBusiInfo struct {
	BusId       int32  `protobuf:"varint,1,opt"`
	SenderUin   uint64 `protobuf:"varint,100,opt"`
	ReceiverUin uint64 `protobuf:"varint,200,opt"`
	GroupCode   uint64 `protobuf:"varint,400,opt"`
	_           [0]func()
}

type ExcitingFileEntry struct {
	FileSize  uint64 `protobuf:"varint,100,opt"`
	Md5       []byte `protobuf:"bytes,200,opt"`
	CheckKey  []byte `protobuf:"bytes,300,opt"`
	Md5S2     []byte `protobuf:"bytes,400,opt"`
	FileId    string `protobuf:"bytes,600,opt"`
	UploadKey []byte `protobuf:"bytes,700,opt"`
}

type ExcitingClientInfo struct {
	ClientType   int32  `protobuf:"varint,100,opt"`
	AppId        string `protobuf:"bytes,200,opt"`
	TerminalType int32  `protobuf:"varint,300,opt"`
	ClientVer    string `protobuf:"bytes,400,opt"`
	Unknown      int32  `protobuf:"varint,600,opt"`
	_            [0]func()
}

type ExcitingFileNameInfo struct {
	FileName string `protobuf:"bytes,100,opt"`
	_        [0]func()
}

type ExcitingHostConfig struct {
	Hosts []*ExcitingHostInfo `protobuf:"bytes,200,rep"`
}

type ExcitingHostInfo struct {
	Url  *ExcitingUrlInfo `protobuf:"bytes,1,opt"`
	Port uint32           `protobuf:"varint,2,opt"`
	_    [0]func()
}

type ExcitingUrlInfo struct {
	Unknown int32  `protobuf:"varint,1,opt"`
	Host    string `protobuf:"bytes,2,opt"`
	_       [0]func()
}

type LoginSigHead struct {
	Uint32LoginSigType uint32 `protobuf:"varint,1,opt"`
	BytesLoginSig      []byte `protobuf:"bytes,2,opt"`
	AppId              uint32 `protobuf:"varint,3,opt"`
}

type NTV2RichMediaHighwayExt struct {
	FileUuid    string              `protobuf:"bytes,1,opt"`
	UKey        string              `protobuf:"bytes,2,opt"`
	Network     *NTHighwayNetwork   `protobuf:"bytes,5,opt"`
	MsgInfoBody []*oidb.MsgInfoBody `protobuf:"bytes,6,rep"`
	BlockSize   uint32              `protobuf:"varint,10,opt"`
	Hash        *NTHighwayHash      `protobuf:"bytes,11,opt"`
}

type NTHighwayHash struct {
	FileSha1 [][]byte `protobuf:"bytes,1,rep"`
}

type NTHighwayNetwork struct {
	IPv4S []*NTHighwayIPv4 `protobuf:"bytes,1,rep"`
}

type NTHighwayIPv4 struct {
	Domain *NTHighwayDomain `protobuf:"bytes,1,opt"`
	Port   uint32           `protobuf:"varint,2,opt"`
	_      [0]func()
}

type NTHighwayDomain struct {
	IsEnable bool   `protobuf:"varint,1,opt"`
	IP       string `protobuf:"bytes,2,opt"`
	_        [0]func()
}

type ReqDataHighwayHead struct {
	MsgBaseHead        *DataHighwayHead `protobuf:"bytes,1,opt"`
	MsgSegHead         *SegHead         `protobuf:"bytes,2,opt"`
	BytesReqExtendInfo []byte           `protobuf:"bytes,3,opt"`
	Timestamp          uint64           `protobuf:"varint,4,opt"`
	MsgLoginSigHead    *LoginSigHead    `protobuf:"bytes,5,opt"`
}

type RespDataHighwayHead struct {
	MsgBaseHead        *DataHighwayHead `protobuf:"bytes,1,opt"`
	MsgSegHead         *SegHead         `protobuf:"bytes,2,opt"`
	ErrorCode          uint32           `protobuf:"varint,3,opt"`
	AllowRetry         uint32           `protobuf:"varint,4,opt"`
	CacheCost          uint32           `protobuf:"varint,5,opt"`
	HtCost             uint32           `protobuf:"varint,6,opt"`
	BytesRspExtendInfo []byte           `protobuf:"bytes,7,opt"`
	Timestamp          uint64           `protobuf:"varint,8,opt"`
	Range              uint64           `protobuf:"varint,9,opt"`
	IsReset            uint32           `protobuf:"varint,10,opt"`
}

type SegHead struct {
	ServiceId     proto.Option[uint32] `protobuf:"varint,1,opt"`
	Filesize      uint64               `protobuf:"varint,2,opt"`
	DataOffset    proto.Option[uint64] `protobuf:"varint,3,opt"`
	DataLength    uint32               `protobuf:"varint,4,opt"`
	RetCode       proto.Option[uint32] `protobuf:"varint,5,opt"`
	ServiceTicket []byte               `protobuf:"bytes,6,opt"`
	// uint32 Flag = 7;
	Md5           []byte               `protobuf:"bytes,8,opt"`
	FileMd5       []byte               `protobuf:"bytes,9,opt"`
	CacheAddr     proto.Option[uint32] `protobuf:"varint,10,opt"`
	QueryTimes    uint32               `protobuf:"varint,11,opt"`
	UpdateCacheIp uint32               `protobuf:"varint,12,opt"`
	CachePort     proto.Option[uint32] `protobuf:"varint,13,opt"`
}

type GroupAvatarExtra struct {
	Type     uint32                  `protobuf:"varint,1,opt"` // 101
	GroupUin uint32                  `protobuf:"varint,2,opt"`
	Field3   *GroupAvatarExtraField3 `protobuf:"bytes,3,opt"`
	Field5   uint32                  `protobuf:"varint,5,opt"` // 3
	Field6   uint32                  `protobuf:"varint,6,opt"` // 1
	_        [0]func()
}

type GroupAvatarExtraField3 struct {
	Field1 uint32 `protobuf:"varint,1,opt"`
	_      [0]func()
}
